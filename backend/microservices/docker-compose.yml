version: '3.8'

services:
  documentdb:
    image: mongodb:7.0
    restart: always
    container_name: documentdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
      #- ./mongo-initializer.js:/docker-entrypoint-initdb.d/mongo-init.js
    env_file:
      - .env
    #environment:
      #- PUID=1000
      #- PGID=1000
    #command: --auth --bind_ip_all
  redis-cache:
    image: redis:7.4.3
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: ["redis-server"]
  applicationdb:
    image: postgres:17.4
    container_name: applicationdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB = ApplicationDB
    volumes:
      - postgresql:/var/lib/postgresql/data/
  
  conversationapi:
    container_name: conversationapi
    restart: alaways
    build:
      context: .
      dockerfile: "conversation/Dockerfile"
    depends_on:
      documentdb:
        condition: service_started
      redis-cache:
        condition: service_healthy
      applicationdb:
        condition: service_started
    ports:
      - "8080:8080"
  

volumes:
  mongodb:
    external: false