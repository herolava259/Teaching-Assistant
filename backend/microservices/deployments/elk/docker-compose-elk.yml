services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    restart: always 
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ES_JAVA_OPTS=-Xms256m -Xmx256m ## setting small memory for jvm (save memeory, weakness ram :(( huhu)
    networks:
      - es-net 
    ports:
      - 9200:9200
    volumes:
    - es_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - es-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    env_file:
      - .env
  
  logstash:
    container_name: logtash
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    env_file:
      - .env
    environment:
      - ES_INDEX=${ES_INDEX}
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    links:
      - elasticsearch
    networks:
      - es-net
    volumes:
      - ./logstash/logstash.yml:usr/share/logstash/config/logstash.yml
      - ./logstash/logstash.conf:usr/share/logstash/pipeline/logstash.conf
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
networks:
  es-net:
    driver: bridge

volumes:
  es_data:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/elasticsearch
      o: bind

