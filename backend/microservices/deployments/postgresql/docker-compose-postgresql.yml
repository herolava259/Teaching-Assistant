services:
  applicationdb:
    image: postgres:17.4
    container_name: applicationdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgresql:/var/lib/postgresql/data/
      - ./initdb.d/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
      - ./initdb.d/create_view.sql:/docker-entrypoint-initdb.d/create_view.sql:ro
      - ./initdb.d/seeding_data.sql:/docker-entrypoint-initdb.d/seeding_data.sql:ro
    env_file:
      - .env
    networks:
      - postgresql_network
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: no
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - postgresql_network
    depends_on:
      - applicationdb
    env_file:
      - .env


networks:
  postgresql_network:
    driver: bridge
    name: postgres_network

volumes:
  pgadmin_data:
    driver: local
    external: false
  postgresql:
    driver: local
    external: false
  
